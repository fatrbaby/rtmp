worker_processes 1;
events {
    worker_connections 1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    
    sendfile        on;
    keepalive_timeout  65;
        
    server {
        listen       8080;
        server_name  localhost;
	    add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods *;
        add_header Access-Control-Allow-Headers *;
        location /live {
		    types {
			    application/vnd.apple.mpegurl m3u8;
			    video/mp2t ts;
		    }
            alias /data/hls;
		    add_header Cache-Control no-cache;
	    }
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            } 
            alias /data/hls_low;
            add_header Cache-Control no-cache;
        }
        location /record {
            alias /data/record;
		    add_header Cache-Control no-cache;
	    }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
rtmp_auto_push on;
rtmp {                  
    server {
        listen 1935;                    
        chunk_size 4096;
        application live {
            live on;
            recorder rec {
                record all;
                record_interval 30s;
                record_suffix .flv;
                record_path /data/record;
                record_unique on;
            }
            exec_record_done ffmpeg -y -i $path -vcodec libx264 -f mp4 $dirname/$basename.mp4;
            exec ffmpeg -i rtmp://localhost/live/$name -c:a copy  -c:v libx264 -b:v 512K -g 30 -f flv rtmp://localhost/hls/$name;
            hls on;
		    hls_path /data/hls;
            hls_fragment 15s;
            hls_playlist_length 60s;
            hls_nested on;
        }
        application hls {
            live on;
            hls on;
            hls_path /data/hls_low;
            hls_nested on;
            hls_fragment 15s;
            hls_playlist_length 60s;
        }
        application testing {
            live on;  
            record off;
        }                  
    }                                                           
}
